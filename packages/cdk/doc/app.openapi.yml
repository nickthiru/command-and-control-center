openapi: '3.0.0'

info:
  version: '1.0.0'
  title: 'C3'
  description: IoT Command and Control Centre App

servers:
  - url: https://ztr18g9zbf.execute-api.us-east-1.amazonaws.com/prod
    description: Basepath

paths:

  /device-mgmt/thing-type:
    description: TBD

    post:
      description: TBD
      
      requestBody:
        description: TBD
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ThingTypeName
              properties:
                ThingTypeName:
                  description: TBD
                  type: string
                ThingTypeDescription:
                  description: TBD
                  type: string
      
      responses:
        "200":
          description: TBD
          content:
            application/json:
              schema:
                type: object
                required:
                  - ThingTypeName
                  - ThingTypeArn
                  - ThingTypeId
                properties:
                  ThingTypeName:
                    description: TBD
                    type: string
                  ThingTypeArn:
                    description: TBD
                    type: string
                  ThingTypeId:
                    description: TBD
                    type: string

                  

  # /device-mgmt/thing:
  #   post:
  #     description: Registers a single Thing in the Things Registry
  #     requestBody:
  #       description: TBD
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             required:
  #               - TBD
  #             properties:
  #               TBD:
  #                 description: TBD
  #                 type: string

#   /spacecrafts/{spacecraftId}:
#     parameters:
#       - name: spacecraftId
#         description: The unique identifier of the spacecraft
#         in: path
#         required: true
#         schema:
#           $ref: '#/components/schemas/SpacecraftId'
#     get:
#       summary: Read a spacecraft
#       responses:
#         '200':
#           description: The spacecraft corresponding to the provided `spacecraftId`
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Spacecraft'
#         404:
#           description: No spacecraft found for the provided `spacecraftId`
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Error'
#         500:
#           description: Unexpected error
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Error'

# components:
#   schemas:
#     SpacecraftId:
#       description: The unique identifier of a spacecraft
#       type: string
#     Spacecraft:
#       type: object
#       required:
#         - id
#         - name
#         - type
#       properties:
#         id:
#           $ref: '#/components/schemas/SpacecraftId'
#         name:
#           type: string
#         type:
#           type: string
#           enum:
#             - capsule
#             - probe
#             - satellite
#             - spaceplane
#             - station
#         description:
#           type: string
#     Error:
#       type: object
#       required:
#         - message
#       properties:
#         message:
#           description: A human readable error message
#           type: string
#   securitySchemes:
#     ApiKey:
#       type: apiKey
#       in: header
#       name: X-Api-Key

# security:
#   - ApiKey: []